<!--
 * @file Builder.razor
 * @author Adolfo Barrientos (badolfo4@gmail.com)
 * @brief This file provides the code for the builder portion of the web application.
 * @version 0.12
 * @date 2023-11-13
 *
 * @copyright Copyright (c) 2023
 *
-->
@using Google.Cloud.Firestore
@using Microsoft.AspNetCore.Components;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Threading.Tasks;


@page "/builder"
@inject IJSRuntime JSRuntime


<link href="css/Builder.css" rel="stylesheet" />

<PageTitle>Builder</PageTitle>


<body>

    <div class="background-container">

        <div class="filter-cta-container">
            <div class="filter-background">

                @*Budget Filter*@

                <h5>Please Select Your Budget</h5>
                <div class="slider">
                    <input type="range" id="slider" min="50" max="3000" value="50" />
                    <p>Selected Value: <span id="sliderValue">$50</span></p>
                </div>


                @*Use Case Filter*@

                <h5>Please Select Your Use Case</h5>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Everyday</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Business</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Gamer</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Visual Artist</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Video Editing</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Engineering</p>
                </div>


                @*Case Size Filter*@

                <h5>Case Size</h5>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Micro Tower</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Medium Tower</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">Full Tower</p>
                </div>


                @*Accessories Filter*@

                <h5>Accessories</h5>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">RGB Lights</p>
                </div>

                <div class="filter-options">
                    <button class="dot"></button>
                    <p class="options">CD Drive</p>
                </div>

            </div>


            @*Call to Action*@
            <div class="cta">
                <p class="cta-text">Need Help?</p>
                <a class="cta-btn" href="/wiki">Go To Our Wiki</a>
            </div>
        </div>
















        @*Available Products*@

        <div class="prebuild-grid">
            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

            <div class="prebuild-options">
                <a class="prebuild-link" href="/builderview">
                    <img src="images/case.png" class="case-image">
                </a>
                <h5 class="prebuild-text">$3,000</h5>
                <p class="prebuild-text">Corsair Medium Tower</p>
            </div>

        </div>


    </div>




</body>

    @foreach (var note in notes)
    {
        <p> @note.description - Cost: $@note.cost</p>
    }


@code {
// THIS CODE WORKED WITH THIS HTML
@* @foreach (var note in notes)
    {
        <p> @note.description - Cost: $@note.cost</p>
    } *@



FirestoreDb db = FirestoreDb.Create("pcdesign-99abf");

    public class Notes
    {
        public string Id { get; set; }
        public string description { get; set; }
        public string cost { get; set; }
    }

    @* private Notes selectedNote; *@
private IEnumerable<Notes> notes = Array.Empty<Notes>();
    private async Task refreshList()
    {
        CollectionReference collection = db.Collection("notes");
        QuerySnapshot docs = await collection.GetSnapshotAsync();

        var lst = new List<Notes>();
        foreach (var doc in docs.Documents)
        {
            lst.Add(new Notes
                {
                    Id = doc.Id,
                    description = doc.GetValue<string>("description"),
                    cost = doc.GetValue<string>("cost")
                });
        }
        notes = lst;
    }

    @* private async Task GetSingleNote()
{
// Example: Get the first document with cost greater than $10
Query query = db.Collection("notes").WhereGreaterThan("cost", 10);
QuerySnapshot snapshot = await query.GetSnapshotAsync();

if (snapshot.Documents.Count > 0)
{
var doc = snapshot.Documents.First();
selectedNote = new Notes
{
Id = doc.Id,
description = doc.GetValue<string>("description"),
cost = doc.GetValue<decimal>("cost")
};
}
else
{
// Handle the case where no document meets the condition
selectedNote = null;
}
} *@

    protected override async Task OnInitializedAsync()
    {
        await refreshList();

        @* // Example: Get a document with cost greater than $10
await GetSingleNote();*@
    }








    @* THIS WORKS LETS GOOOO LAJLDJFLAJLDAKJFLDFJAD
AJ
PSDFJALJFF
AJF
AJFAFJALFJLFJLKFJAS
FJF



FirestoreDb db = FirestoreDb.Create("pcdesign-99abf");
public class Notes
{
public string Id { get; set; }
public string description { get; set; }
}

private IEnumerable<Notes> notes = Array.Empty<Notes>();

private async Task refreshList()
{
CollectionReference collection = db.Collection("notes");
QuerySnapshot docs = await collection.GetSnapshotAsync();

var lst = new List<Notes>();
foreach (var doc in docs.Documents)
{
lst.Add(new Notes{Id=doc.Id, description=doc.GetValue<string>("description")});
}
notes = lst;
}

protected override async Task OnInitializedAsync()
{
await refreshList();
} *@










}